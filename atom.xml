<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[0x44.org]]></title>
  <link href="http://0x44.org/atom.xml" rel="self"/>
  <link href="http://0x44.org/"/>
  <updated>2012-06-23T00:19:32+08:00</updated>
  <id>http://0x44.org/</id>
  <author>
    <name><![CDATA[Ding Deng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的电子邮件设置]]></title>
    <link href="http://0x44.org/blog/2012/06/21/email-setup/"/>
    <updated>2012-06-21T00:00:00+08:00</updated>
    <id>http://0x44.org/blog/2012/06/21/email-setup</id>
    <content type="html"><![CDATA[<p>对于一个<a href="https://twitter.com/chenshaoju/status/211147259738464256">终端控</a>来说，<a href="https://twitter.com/dingdeng/status/215134994618789888">对着浏览器是很难写出字来的</a>。但是这个星球上最好的电子邮件服务 Gmail 却偏偏是基于浏览器的。我可以在终端下通过 <a href="http://en.wikipedia.org/wiki/Internet_Message_Access_Protocol">IMAP</a> 协议操作 Gmail，但是在线的 IMAP 操作，特别是在网络连接不稳定的情况下，太痛苦了。经过一段时间的摸索以及较长时间的试用，我逐渐形成了这样的电子邮件使用模式：</p>

<ul>
<li>所有邮件都汇总到 Gmail 做过滤、分类与搜索。</li>
<li>使用 IMAP 协议定时跟 Gmail 同步邮件，并在本地起一个邮件服务器提供 IMAP 服务。</li>
<li>简单邮件在 Gmail 里处理，需要长篇大论的邮件在连接了本地邮件服务器的客户端里处理。</li>
</ul>


<p>下面是一些细节。</p>

<h2>汇总邮件到 Gmail</h2>

<p>Gmail 可以<a href="http://support.google.com/mail/bin/answer.py?hl=en&amp;ctx=mail&amp;answer=21288">代收</a>其他邮箱的邮件，也可以<a href="http://support.google.com/mail/bin/answer.py?hl=en&amp;ctx=mail&amp;answer=22370">代发</a>，所以只要邮箱还在网上，都很好处理。麻烦的是已经通过 <a href="http://en.wikipedia.org/wiki/Post_Office_Protocol">POP</a> 协议收到本地的邮件，特别是当本地使用的还是很邪门的存储形式（比方说 <a href="http://www.gnus.org/manual/gnus_194.html">nnml</a>）的时候。好在 nnml 虽然跟谁都不兼容，但内容好歹还是纯文本的。我网上找了个<a href="http://www.enyo.de/fw/scripts/nnml2maildir.pl">脚本</a>（Perl 脚本，点击会自动下载），就把邮件目录转成了 <a href="http://cr.yp.to/proto/maildir.html">Maildir</a> 形式。</p>

<p>剩下的就是把转出来的 Maildir 同步到 Gmail，这个跟本地 IMAP 服务器与 Gmail 之间同步邮件的原理是一样的，接下来会说。</p>

<p>过滤、分类与搜索是 Gmail 一直以来的强项，就没有必要多说了。</p>

<h2>本地 IMAP 服务器与 Gmail 的同步</h2>

<p>本地 IMAP 服务器与 Gmail 的同步其实就是本地 Maildir 与 Gmail 的同步，因为绝大多数的 IMAP 服务器都支持 Maildir 形式的邮件存储。事实上，绝大多数的邮件客户端也都支持直接读写 Maildir。那我为什么还费这么大劲套一层 IMAP 上去呢？因为当时我还没确定用哪一个邮件客户端——之前用的是 <a href="http://www.gnus.org/">Gnus</a>，但是有在考虑 <a href="http://www.mutt.org/">Mutt</a>，甚至 <a href="http://notmuchmail.org/">Notmuch</a>——所以我想还是把接口抽象到网络协议这个层面比较好，谁知道哪天我会不会又爱上一个只支持 IMAP 协议的客户端呢。</p>

<p>目前我客户端用的是 Gnus（没时间学其他的，就这还是在学校里的时候学的），本地 IMAP 服务用的是 <a href="http://dovecot.org/">Dovecot</a>，邮件存储用的是 Maildir，与 Gmail 同步用的是 <a href="http://offlineimap.org/">OfflineIMAP</a>。</p>

<p>软件的具体配置就不说了，不折腾会死星人应该都能搞定。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[名字的国际化]]></title>
    <link href="http://0x44.org/blog/2012/06/18/i18n-of-names/"/>
    <updated>2012-06-18T00:00:00+08:00</updated>
    <id>http://0x44.org/blog/2012/06/18/i18n-of-names</id>
    <content type="html"><![CDATA[<p>前几天为了装 <a href="http://www.amazon.com/gp/kindle/ipad">Kindle for iPad</a>，尝试把 Apple ID 从中国区切到美国区，中间注意到一个细节，就是中国区的名字显示方式是“姓 + 名”，而美国区的显示方式则是“First name + Last name”，符合中英两种语言在显示名字顺序方面的不同习惯。</p>

<p>按照通常的译法，“First name”为“名”，“Last name”为“姓”，所以绝大多数英文网站在做中文本地化的时候直接就把名字显示成了“名 + 姓”，而这并不符合中文的表达习惯。Apple 能根据不同的语言选择不同的显示顺序，说明他们在处理名字的时候考虑到了国际化方面的问题。</p>

<p>那么，是不是显示对顺序就够了呢？我们再来看两个例子。</p>

<h2>名字规则</h2>

<ul>
<li><p>冰岛人</p>

<p>Björk Guðmundsdóttir 是冰岛歌手<a href="http://zh.wikipedia.org/wiki/%E7%A2%A7%E7%8E%89_(%E6%AD%8C%E6%89%8B)">比约克</a>的全名。Björk 是她的名，但 Guðmundsdóttir 却不是她的姓。Guðmundsdóttir 由 Guðmund 与 sdóttir 两部分组成。Guðmund 表示她父亲的名（Guðmundur），sdóttir 则表示她的性别：sson 为男，sdóttir 为女。</p></li>
<li><p>西班牙人</p>

<p>西班牙人的名字里面一般包含两个姓。假设有一个西班牙美女叫作 María-Jose Carreño Quiñones，那么 María-Jose 是她的名，Carreño 是她父亲的姓，而 Quiñones 则是她母亲的姓。</p></li>
</ul>


<p>先姓后名、先名后姓、有名无姓、有两个姓，这些都还算简单的，至少几句话就可以表达清楚。更多更复杂的名字规则可以参考<a href="http://www.w3.org/International/questions/qa-personal-names#morenames">这里</a>的一些链接。</p>

<p>拿这些例子到 Apple 网站上验证了一下，发现 Apple 也并没有国际化得那么彻底。也许他们只是在显示顺序方面做了一些考虑。</p>

<h2>解决方案</h2>

<p>即使能把所有的名字规则都一一归纳出来，在具体实施的时候还是会碰到下面两个问题：</p>

<ul>
<li>千奇百怪的规则，数据怎么集中存储？</li>
<li>国家、民族、语言、名字规则并不是一一对应的，怎么判断用户的实际情况从而给他设定一个正确的表达形式？</li>
</ul>


<p>上述原因导致我们基本没有办法使用一种通用的模式来精确地存储与展示各种不同规则的名字。为此，W3C 主管国际化方面活动的 Richard Ishida 在其起草的一份<a href="http://www.w3.org/International/questions/qa-personal-names">文档</a>中提出了如下几条建议：</p>

<ul>
<li>如果没有特殊需要，用全名，而不是姓、名分开。</li>
<li>确实需要姓、名分开的，用 Family name、Given name 这种表达形式，而不是 First name、Last name 这种隐含了顺序方面意义的表达形式。</li>
<li>如果姓、名分开只是为了叫起来亲切一点，那么不如使用“全名 + 昵称”组合，这样还可以照顾到那些有名无姓的名字形式。</li>
</ul>


<h2>参考资料</h2>

<ul>
<li><a href="http://www.w3.org/International/questions/qa-personal-names">Richard Ishida: Personal names around the world</a> 以及<a href="http://www.w3.org/International/wiki/Personal_names">相关评论</a>。</li>
<li><a href="http://www.zevils.com/2007/12/internationalization-of-names.html">Matthew Sachs: Internationalization of Names</a>。</li>
<li><a href="http://core.trac.wordpress.org/ticket/6148">WordPress Ticket #6148: Internationalization of personal names</a>。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shakespeare and Company]]></title>
    <link href="http://0x44.org/blog/2012/01/31/shakespeare-and-company/"/>
    <updated>2012-01-31T00:00:00+08:00</updated>
    <id>http://0x44.org/blog/2012/01/31/shakespeare-and-company</id>
    <content type="html"><![CDATA[<p>春节期间看了几部电影，其中的两部是 Midnight in Paris（《午夜巴黎》）与 Julie &amp; Julia（《朱莉与朱莉娅》）。《朱莉与朱莉娅》看到 Julia 上书店去找英文的法式烹饪书籍的时候，忽然觉得那家店的名字很眼熟，然后想起来是之前刚刚在《午夜巴黎》里看到过（Gil 与 Inez 分手之后在街上闲逛那一段）。两段情节都发生在巴黎，因此我怀疑这家书店是真实存在的，就上网搜了一下，结果发现这家店不仅存在，而且在英美文学史上颇有名气。</p>

<p>这家书店就是 Shakespeare and Company。</p>

<h2>真实的 Shakespeare and Company</h2>

<p>Shakespeare and Company 其实是巴黎两家不同书店的名字。第一家由美国人 Sylvia Beach 创办于 1919 年，1941 年德军攻占巴黎之后停业；第二家由美国人 George Whitman 创办于 1951 年，当时叫 Le Mistral，1964 年为纪念 Sylvia Beach 改名为 Shakespeare and Company，并沿用至今。</p>

<p>两家 Shakespeare and Company 都是美国人开的，这就引出了它们的另一个共同点，就是专注于英语言文学，是英语言文学界很多著名作家的聚集地：海明威、菲茨杰拉德等都是 Sylvia Beach 店里的常客，乔伊斯则干脆把它当成了自己的办公室；George Whitman 的顾客虽然没有 Sylvia Beach 的那么如雷贯耳，但也不都是等闲之辈。</p>

<h2>纪念</h2>

<ul>
<li>我没有查到 Shakespeare and Company 这个名字的来源，但是从它对英语言文学的专注以及莎士比亚在英语言文学史上的地位，我想我可以假设这个店名是在向莎士比亚致敬。</li>
<li>前面已经提到，为了纪念 Sylvia Beach，George Whitman 于 1964 年把 Le Mistral 改名为 Shakespeare and Company。</li>
<li>除了改店名，George Whitman 还以另外一种方式向 Sylvia Beach 致敬——他的女儿名叫 Sylvia Beach Whitman。George Whitman 死后，Sylvia Whitman 在继续经营着 Shakespeare and Company。</li>
<li>《午夜巴黎》所怀念的时代，正是 Sylvia Beach 经营着 Shakespeare and Company 的时代，片中的很多历史人物，都是 Sylvia Beach 店里的常客。</li>
<li>2005 年有一部纪录片叫作 Portrait of a Bookstore as an Old Man，是关于 George Whitman 与他的书店 Shakespeare and Company 的。</li>
</ul>


<h2>《朱莉与朱莉娅》的穿帮之处</h2>

<p>《朱莉与朱莉娅》开篇已经是 1949 年的巴黎，Julia 在尝试了做帽子、打桥牌之后才打算学的烹饪，所以她上书店找英文的法式烹饪书籍的时间肯定在 1949 年之后，而根据前面介绍的 Shakespeare and Company 的历史：</p>

<ul>
<li>1919 年到 1941 年，Shakespeare and Company</li>
<li>1951 年到 1964 年，Le Mistral</li>
<li>1964 年至今，Shakespeare and Company</li>
</ul>


<p>1941 到 1964 年间的巴黎是不存在一家叫作 Shakespeare and Company 的书店的，所以《朱莉与朱莉娅》穿帮了。</p>

<h2>文艺作品中的 Shakespeare and Company</h2>

<ul>
<li>A Moveable Feast（《流动的飨宴》），海明威回忆录，1964 年。</li>
<li>Before Sunset（《爱在日落黄昏时》），电影，2004 年。</li>
<li>Portrait of a Bookstore as an Old Man，纪录片，2005 年。</li>
<li>Julie &amp; Julia（《朱莉与朱莉娅》），电影，2009 年。</li>
<li>Midnight in Paris（《午夜巴黎》），电影，2011 年。</li>
</ul>

]]></content>
  </entry>
  
</feed>
